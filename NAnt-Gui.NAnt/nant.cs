using System.Xml.Serialization;
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=1.1.4322.2032.
// 

namespace NAntGui.NAnt.NAnt
{
	/// <remarks/>
	[XmlType(Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	[XmlRoot(Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd", IsNullable=false)]
	public class project
	{

		/// <remarks/>
		[XmlAttribute()] public string name;

		/// <remarks/>
		[XmlAttribute()] public string @default;

		/// <remarks/>
		[XmlAttribute()] public string basedir;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.XmlPeekTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksXmlPeekTask
	{
		/// <remarks/>
		[XmlElement("namespaces")] public NAntCoreTasksXmlPeekTaskNamespaces[] namespaces;

		/// <remarks/>
		[XmlAttribute()] public string file;

		/// <remarks/>
		[XmlAttribute()] public string nodeindex;

		/// <remarks/>
		[XmlAttribute()] public string property;

		/// <remarks/>
		[XmlAttribute()] public string xpath;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.XmlPeekTaskNamespaces", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksXmlPeekTaskNamespaces
	{
		/// <remarks/>
		[XmlElement("namespace")] public NAntCoreTypesXmlNamespace[] @namespace;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.XmlNamespace", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesXmlNamespace
	{
		/// <remarks/>
		[XmlAttribute()] public string prefix;

		/// <remarks/>
		[XmlAttribute()] public string uri;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class Target
	{

		/// <remarks/>
		[XmlAttribute()] public string name;

		/// <remarks/>
		[XmlAttribute()] public string depends;

		/// <remarks/>
		[XmlAttribute()] public string description;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[
		XmlType(TypeName="NAnt.DotNet.Types.NamespaceImportCollection",
			Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTypesNamespaceImportCollection
	{
		/// <remarks/>
		[XmlElement("import")] public NAntDotNetTypesNamespaceImport[] import;

		/// <remarks/>
		[XmlAttribute()] public string id;

		/// <remarks/>
		[XmlAttribute()] public string refid;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Types.NamespaceImport", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTypesNamespaceImport
	{
		/// <remarks/>
		[XmlAttribute()] public string name;

		/// <remarks/>
		[XmlAttribute()] public string @namespace;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.IncludeTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksIncludeTask
	{
		/// <remarks/>
		[XmlAttribute()] public string buildfile;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.NAntSchemaTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksNAntSchemaTask
	{
		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute("target-ns")] public string targetns;

		/// <remarks/>
		[XmlAttribute()] public string @class;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.NAntTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksNAntTask
	{
		/// <remarks/>
		[XmlElement("buildfiles")] public NAntCoreTypesFileSet[] buildfiles;

		/// <remarks/>
		[XmlElement("properties")] public NAntCoreTasksNAntTaskProperties[] properties;

		/// <remarks/>
		[XmlAttribute()] public string buildfile;

		/// <remarks/>
		[XmlAttribute()] public string target;

		/// <remarks/>
		[XmlAttribute()] public string inheritall;

		/// <remarks/>
		[XmlAttribute()] public string inheritrefs;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.FileSet", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesFileSet
	{
		/// <remarks/>
		[XmlElement("includes")] public NAntCoreTypesFileSetInclude[] includes;

		/// <remarks/>
		[XmlElement("include")] public NAntCoreTypesFileSetInclude[] include;

		/// <remarks/>
		[XmlElement("excludes")] public NAntCoreTypesFileSetExclude[] excludes;

		/// <remarks/>
		[XmlElement("exclude")] public NAntCoreTypesFileSetExclude[] exclude;

		/// <remarks/>
		[XmlElement("includesList")] public NAntCoreTypesFileSetIncludesFile[] includesList;

		/// <remarks/>
		[XmlElement("includesfile")] public NAntCoreTypesFileSetIncludesFile[] includesfile;

		/// <remarks/>
		[XmlElement("excludesfile")] public NAntCoreTypesFileSetExcludesFile[] excludesfile;

		/// <remarks/>
		[XmlAttribute()] public string failonempty;

		/// <remarks/>
		[XmlAttribute()] public string defaultexcludes;

		/// <remarks/>
		[XmlAttribute()] public string basedir;

		/// <remarks/>
		[XmlAttribute()] public string id;

		/// <remarks/>
		[XmlAttribute()] public string refid;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.FileSet-Include", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesFileSetInclude
	{
		/// <remarks/>
		[XmlAttribute()] public string asis;

		/// <remarks/>
		[XmlAttribute()] public string frompath;

		/// <remarks/>
		[XmlAttribute()] public string name;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.FileSet-Exclude", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesFileSetExclude
	{
		/// <remarks/>
		[XmlAttribute()] public string name;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.FileSet-IncludesFile", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesFileSetIncludesFile
	{
		/// <remarks/>
		[XmlAttribute()] public string asis;

		/// <remarks/>
		[XmlAttribute()] public string frompath;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;

		/// <remarks/>
		[XmlAttribute()] public string name;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.FileSet-ExcludesFile", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesFileSetExcludesFile
	{
		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;

		/// <remarks/>
		[XmlAttribute()] public string name;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.NAntTaskProperties", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksNAntTaskProperties
	{
		/// <remarks/>
		[XmlElement("property")] public NAntCoreTasksPropertyTask[] property;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.PropertyTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksPropertyTask
	{
		/// <remarks/>
		[XmlAttribute()] public string name;

		/// <remarks/>
		[XmlAttribute()] public string value;

		/// <remarks/>
		[XmlAttribute()] public string @readonly;

		/// <remarks/>
		[XmlAttribute()] public string dynamic;

		/// <remarks/>
		[XmlAttribute()] public string overwrite;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Filters.FilterChain", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreFiltersFilterChain
	{
		/// <remarks/>
		[XmlElement("filter")] public NAntCoreFiltersFilter[] filter;

		/// <remarks/>
		[XmlAttribute()] public string encoding;

		/// <remarks/>
		[XmlAttribute()] public string id;

		/// <remarks/>
		[XmlAttribute()] public string refid;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Filters.Filter", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreFiltersFilter
	{
		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[
		XmlType(TypeName="Tests.NAnt.Core.Util.XmlLoggerTest-TestTask",
			Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class TestsNAntCoreUtilXmlLoggerTestTestTask
	{
		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.AttribTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksAttribTask
	{
		/// <remarks/>
		[XmlElement("fileset")] public NAntCoreTypesFileSet[] fileset;

		/// <remarks/>
		[XmlAttribute()] public string file;

		/// <remarks/>
		[XmlAttribute()] public string archive;

		/// <remarks/>
		[XmlAttribute()] public string hidden;

		/// <remarks/>
		[XmlAttribute()] public string normal;

		/// <remarks/>
		[XmlAttribute()] public string @readonly;

		/// <remarks/>
		[XmlAttribute()] public string system;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.SetEnvTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksSetEnvTask
	{
		/// <remarks/>
		[XmlElement("variable")] public NAntCoreTypesEnvironmentVariable[] variable;

		/// <remarks/>
		[XmlAttribute()] public string name;

		/// <remarks/>
		[XmlAttribute()] public string value;

		/// <remarks/>
		[XmlAttribute()] public string file;

		/// <remarks/>
		[XmlAttribute()] public string dir;

		/// <remarks/>
		[XmlAttribute()] public string path;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.EnvironmentVariable", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesEnvironmentVariable
	{
		/// <remarks/>
		[XmlElement("path")] public NAntCoreTypesPathSet[] path;

		/// <remarks/>
		[XmlAttribute()] public string name;

		/// <remarks/>
		[XmlAttribute()] public string value;

		/// <remarks/>
		[XmlAttribute()] public string file;

		/// <remarks/>
		[XmlAttribute()] public string dir;

		/// <remarks/>
		[XmlAttribute("path")] public string path1;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.PathSet", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesPathSet
	{
		/// <remarks/>
		[XmlElement("path")] public object[] path;

		/// <remarks/>
		[XmlElement("pathelement")] public NAntCoreTypesPathElement[] pathelement;

		/// <remarks/>
		[XmlAttribute()] public string id;

		/// <remarks/>
		[XmlAttribute()] public string refid;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.PathElement", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesPathElement
	{
		/// <remarks/>
		[XmlAttribute()] public string file;

		/// <remarks/>
		[XmlAttribute()] public string dir;

		/// <remarks/>
		[XmlAttribute()] public string path;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.SourceControl.Tasks.RTagTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntSourceControlTasksRTagTask
	{
		/// <remarks/>
		[XmlElement("fileset")] public NAntSourceControlTypesCvsFileSet[] fileset;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string tag;

		/// <remarks/>
		[XmlAttribute()] public string remove;

		/// <remarks/>
		[XmlAttribute("move-if-exists")] public string moveifexists;

		/// <remarks/>
		[XmlAttribute()] public string recursive;

		/// <remarks/>
		[XmlAttribute("act-on-tag")] public string actontag;

		/// <remarks/>
		[XmlAttribute("act-on-date")] public string actondate;

		/// <remarks/>
		[XmlAttribute("force-head")] public string forcehead;

		/// <remarks/>
		[XmlAttribute()] public string cvsfullpath;

		/// <remarks/>
		[XmlAttribute()] public string cvsroot;

		/// <remarks/>
		[XmlAttribute()] public string module;

		/// <remarks/>
		[XmlAttribute()] public string usesharpcvslib;

		/// <remarks/>
		[XmlAttribute()] public string cvsrsh;

		/// <remarks/>
		[XmlAttribute()] public string quiet;

		/// <remarks/>
		[XmlAttribute()] public string reallyquiet;

		/// <remarks/>
		[XmlAttribute()] public string @readonly;

		/// <remarks/>
		[XmlAttribute()] public string readwrite;

		/// <remarks/>
		[XmlAttribute()] public string compressionlevel;

		/// <remarks/>
		[XmlAttribute()] public string destination;

		/// <remarks/>
		[XmlAttribute()] public string password;

		/// <remarks/>
		[XmlAttribute()] public string passfile;

		/// <remarks/>
		[XmlAttribute()] public string commandline;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.SourceControl.Types.CvsFileSet", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntSourceControlTypesCvsFileSet
	{
		/// <remarks/>
		[XmlElement("includes")] public NAntCoreTypesFileSetInclude[] includes;

		/// <remarks/>
		[XmlElement("include")] public NAntCoreTypesFileSetInclude[] include;

		/// <remarks/>
		[XmlElement("excludes")] public NAntCoreTypesFileSetExclude[] excludes;

		/// <remarks/>
		[XmlElement("exclude")] public NAntCoreTypesFileSetExclude[] exclude;

		/// <remarks/>
		[XmlElement("includesList")] public NAntCoreTypesFileSetIncludesFile[] includesList;

		/// <remarks/>
		[XmlElement("includesfile")] public NAntCoreTypesFileSetIncludesFile[] includesfile;

		/// <remarks/>
		[XmlElement("excludesfile")] public NAntCoreTypesFileSetExcludesFile[] excludesfile;

		/// <remarks/>
		[XmlAttribute()] public string usecvsignore;

		/// <remarks/>
		[XmlAttribute()] public string failonempty;

		/// <remarks/>
		[XmlAttribute()] public string defaultexcludes;

		/// <remarks/>
		[XmlAttribute()] public string basedir;

		/// <remarks/>
		[XmlAttribute()] public string id;

		/// <remarks/>
		[XmlAttribute()] public string refid;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.Argument", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesArgument
	{
		/// <remarks/>
		[XmlElement("path")] public NAntCoreTypesPathSet[] path;

		/// <remarks/>
		[XmlAttribute()] public string value;

		/// <remarks/>
		[XmlAttribute()] public string file;

		/// <remarks/>
		[XmlAttribute("path")] public string path1;

		/// <remarks/>
		[XmlAttribute()] public string line;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Types.AssemblyFileSet", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTypesAssemblyFileSet
	{
		/// <remarks/>
		[XmlElement("lib")] public NAntDotNetTypesLibDirectorySet[] lib;

		/// <remarks/>
		[XmlElement("includes")] public NAntCoreTypesFileSetInclude[] includes;

		/// <remarks/>
		[XmlElement("include")] public NAntCoreTypesFileSetInclude[] include;

		/// <remarks/>
		[XmlElement("excludes")] public NAntCoreTypesFileSetExclude[] excludes;

		/// <remarks/>
		[XmlElement("exclude")] public NAntCoreTypesFileSetExclude[] exclude;

		/// <remarks/>
		[XmlElement("includesList")] public NAntCoreTypesFileSetIncludesFile[] includesList;

		/// <remarks/>
		[XmlElement("includesfile")] public NAntCoreTypesFileSetIncludesFile[] includesfile;

		/// <remarks/>
		[XmlElement("excludesfile")] public NAntCoreTypesFileSetExcludesFile[] excludesfile;

		/// <remarks/>
		[XmlAttribute()] public string failonempty;

		/// <remarks/>
		[XmlAttribute()] public string defaultexcludes;

		/// <remarks/>
		[XmlAttribute()] public string basedir;

		/// <remarks/>
		[XmlAttribute()] public string id;

		/// <remarks/>
		[XmlAttribute()] public string refid;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Types.LibDirectorySet", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTypesLibDirectorySet
	{
		/// <remarks/>
		[XmlElement("includes")] public NAntCoreTypesFileSetInclude[] includes;

		/// <remarks/>
		[XmlElement("include")] public NAntCoreTypesFileSetInclude[] include;

		/// <remarks/>
		[XmlElement("excludes")] public NAntCoreTypesFileSetExclude[] excludes;

		/// <remarks/>
		[XmlElement("exclude")] public NAntCoreTypesFileSetExclude[] exclude;

		/// <remarks/>
		[XmlElement("includesList")] public NAntCoreTypesFileSetIncludesFile[] includesList;

		/// <remarks/>
		[XmlElement("includesfile")] public NAntCoreTypesFileSetIncludesFile[] includesfile;

		/// <remarks/>
		[XmlElement("excludesfile")] public NAntCoreTypesFileSetExcludesFile[] excludesfile;

		/// <remarks/>
		[XmlAttribute()] public string failonempty;

		/// <remarks/>
		[XmlAttribute()] public string defaultexcludes;

		/// <remarks/>
		[XmlAttribute()] public string id;

		/// <remarks/>
		[XmlAttribute()] public string refid;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.UpToDateTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksUpToDateTask
	{
		/// <remarks/>
		[XmlElement("sourcefiles")] public NAntCoreTypesFileSet[] sourcefiles;

		/// <remarks/>
		[XmlElement("targetfiles")] public NAntCoreTypesFileSet[] targetfiles;

		/// <remarks/>
		[XmlAttribute()] public string property;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.VbcTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksVbcTask
	{
		/// <remarks/>
		[XmlElement("imports")] public NAntDotNetTypesNamespaceImportCollection[] imports;

		/// <remarks/>
		[XmlElement("warnaserror")] public NAntDotNetTypesWarningAsError[] warnaserror;

		/// <remarks/>
		[XmlElement("nowarn")] public NAntDotNetTasksVbcTaskNowarn[] nowarn;

		/// <remarks/>
		[XmlElement("lib")] public NAntCoreTypesFileSet[] lib;

		/// <remarks/>
		[XmlElement("references")] public NAntDotNetTypesAssemblyFileSet[] references;

		/// <remarks/>
		[XmlElement("pkg-references")] public NAntDotNetTasksVbcTaskPkgreferences[] pkgreferences;

		/// <remarks/>
		[XmlElement("resources")] public NAntDotNetTypesResourceFileSet[] resources;

		/// <remarks/>
		[XmlElement("modules")] public NAntDotNetTypesAssemblyFileSet[] modules;

		/// <remarks/>
		[XmlElement("sources")] public NAntCoreTypesFileSet[] sources;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string baseaddress;

		/// <remarks/>
		[XmlAttribute()] public string debug;

		/// <remarks/>
		[XmlAttribute()] public string doc;

		/// <remarks/>
		[XmlAttribute("imports")] public string imports1;

		/// <remarks/>
		[XmlAttribute()] public string optioncompare;

		/// <remarks/>
		[XmlAttribute()] public string optionexplicit;

		/// <remarks/>
		[XmlAttribute()] public string optionoptimize;

		/// <remarks/>
		[XmlAttribute()] public string optionstrict;

		/// <remarks/>
		[XmlAttribute()] public string removeintchecks;

		/// <remarks/>
		[XmlAttribute()] public string rootnamespace;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string target;

		/// <remarks/>
		[XmlAttribute()] public string define;

		/// <remarks/>
		[XmlAttribute()] public string win32icon;

		/// <remarks/>
		[XmlAttribute("warnaserror")] public string warnaserror1;

		/// <remarks/>
		[XmlAttribute("nowarn")] public string nowarn1;

		/// <remarks/>
		[XmlAttribute()] public string rebuild;

		/// <remarks/>
		[XmlAttribute()] public string main;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Types.WarningAsError", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTypesWarningAsError
	{
		/// <remarks/>
		[XmlElement("include")] public NAntDotNetTypesCompilerWarning[] include;

		/// <remarks/>
		[XmlElement("exclude")] public NAntDotNetTypesCompilerWarning[] exclude;

		/// <remarks/>
		[XmlAttribute()] public string id;

		/// <remarks/>
		[XmlAttribute()] public string refid;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Types.CompilerWarning", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTypesCompilerWarning
	{
		/// <remarks/>
		[XmlAttribute()] public string number;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.VbcTaskNowarn", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksVbcTaskNowarn
	{
		/// <remarks/>
		[XmlElement("warning")] public NAntDotNetTypesCompilerWarning[] warning;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.VbcTaskPkgreferences", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksVbcTaskPkgreferences
	{
		/// <remarks/>
		[XmlElement("package")] public NAntDotNetTypesPackage[] package;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Types.Package", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTypesPackage
	{
		/// <remarks/>
		[XmlAttribute()] public string name;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Types.ResourceFileSet", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTypesResourceFileSet
	{
		/// <remarks/>
		[XmlElement("includes")] public NAntCoreTypesFileSetInclude[] includes;

		/// <remarks/>
		[XmlElement("include")] public NAntCoreTypesFileSetInclude[] include;

		/// <remarks/>
		[XmlElement("excludes")] public NAntCoreTypesFileSetExclude[] excludes;

		/// <remarks/>
		[XmlElement("exclude")] public NAntCoreTypesFileSetExclude[] exclude;

		/// <remarks/>
		[XmlElement("includesList")] public NAntCoreTypesFileSetIncludesFile[] includesList;

		/// <remarks/>
		[XmlElement("includesfile")] public NAntCoreTypesFileSetIncludesFile[] includesfile;

		/// <remarks/>
		[XmlElement("excludesfile")] public NAntCoreTypesFileSetExcludesFile[] excludesfile;

		/// <remarks/>
		[XmlAttribute()] public string prefix;

		/// <remarks/>
		[XmlAttribute()] public string dynamicprefix;

		/// <remarks/>
		[XmlAttribute()] public string failonempty;

		/// <remarks/>
		[XmlAttribute()] public string defaultexcludes;

		/// <remarks/>
		[XmlAttribute()] public string basedir;

		/// <remarks/>
		[XmlAttribute()] public string id;

		/// <remarks/>
		[XmlAttribute()] public string refid;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.AssemblyLinkerTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksAssemblyLinkerTask
	{
		/// <remarks/>
		[XmlElement("sources")] public NAntCoreTypesFileSet[] sources;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string algid;

		/// <remarks/>
		[XmlAttribute()] public string company;

		/// <remarks/>
		[XmlAttribute()] public string configuration;

		/// <remarks/>
		[XmlAttribute()] public string copyright;

		/// <remarks/>
		[XmlAttribute()] public string culture;

		/// <remarks/>
		[XmlAttribute()] public string delaysign;

		/// <remarks/>
		[XmlAttribute()] public string description;

		/// <remarks/>
		[XmlAttribute()] public string evidence;

		/// <remarks/>
		[XmlAttribute()] public string fileversion;

		/// <remarks/>
		[XmlAttribute()] public string flags;

		/// <remarks/>
		[XmlAttribute()] public string keycontainer;

		/// <remarks/>
		[XmlAttribute()] public string keyfile;

		/// <remarks/>
		[XmlAttribute()] public string main;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string target;

		/// <remarks/>
		[XmlAttribute()] public string product;

		/// <remarks/>
		[XmlAttribute()] public string productversion;

		/// <remarks/>
		[XmlAttribute()] public string template;

		/// <remarks/>
		[XmlAttribute()] public string title;

		/// <remarks/>
		[XmlAttribute()] public string trademark;

		/// <remarks/>
		[XmlAttribute()] public string version;

		/// <remarks/>
		[XmlAttribute()] public string win32icon;

		/// <remarks/>
		[XmlAttribute()] public string win32res;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VisualCpp.Tasks.RcTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTasksRcTask
	{
		/// <remarks/>
		[XmlElement("includedirs")] public NAntCoreTypesFileSet[] includedirs;

		/// <remarks/>
		[XmlElement("defines")] public NAntVisualCppTasksRcTaskDefines[] defines;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string options;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string rcfile;

		/// <remarks/>
		[XmlAttribute()] public string langid;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VisualCpp.Tasks.RcTaskDefines", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTasksRcTaskDefines
	{
		/// <remarks/>
		[XmlElement("define")] public NAntCoreTypesOption[] define;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.Option", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesOption
	{
		/// <remarks/>
		[XmlAttribute()] public string name;

		/// <remarks/>
		[XmlAttribute()] public string value;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.ResGenTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksResGenTask
	{
		/// <remarks/>
		[XmlElement("resources")] public NAntDotNetTypesResourceFileSet[] resources;

		/// <remarks/>
		[XmlElement("assemblies")] public NAntDotNetTypesAssemblyFileSet[] assemblies;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string input;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string target;

		/// <remarks/>
		[XmlAttribute()] public string todir;

		/// <remarks/>
		[XmlAttribute()] public string usesourcepath;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.VjcTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksVjcTask
	{
		/// <remarks/>
		[XmlElement("nowarn")] public NAntDotNetTasksVjcTaskNowarn[] nowarn;

		/// <remarks/>
		[XmlElement("lib")] public NAntCoreTypesFileSet[] lib;

		/// <remarks/>
		[XmlElement("references")] public NAntDotNetTypesAssemblyFileSet[] references;

		/// <remarks/>
		[XmlElement("resources")] public NAntDotNetTypesResourceFileSet[] resources;

		/// <remarks/>
		[XmlElement("sources")] public NAntCoreTypesFileSet[] sources;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string debug;

		/// <remarks/>
		[XmlAttribute()] public string securescoping;

		/// <remarks/>
		[XmlAttribute()] public string x;

		/// <remarks/>
		[XmlAttribute()] public string libpath;

		/// <remarks/>
		[XmlAttribute()] public string jcpa;

		/// <remarks/>
		[XmlAttribute()] public string codepage;

		/// <remarks/>
		[XmlAttribute()] public string warninglevel;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string target;

		/// <remarks/>
		[XmlAttribute()] public string define;

		/// <remarks/>
		[XmlAttribute()] public string win32icon;

		/// <remarks/>
		[XmlAttribute()] public string warnaserror;

		/// <remarks/>
		[XmlAttribute("nowarn")] public string nowarn1;

		/// <remarks/>
		[XmlAttribute()] public string rebuild;

		/// <remarks/>
		[XmlAttribute()] public string main;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.VjcTaskNowarn", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksVjcTaskNowarn
	{
		/// <remarks/>
		[XmlElement("warning")] public NAntDotNetTypesCompilerWarning[] warning;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.EchoTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksEchoTask
	{
		/// <remarks/>
		[XmlAttribute()] public string message;

		/// <remarks/>
		[XmlAttribute()] public string file;

		/// <remarks/>
		[XmlAttribute()] public string append;

		/// <remarks/>
		[XmlAttribute()] public string level;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.MoveTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksMoveTask
	{
		/// <remarks/>
		[XmlElement("fileset")] public NAntCoreTypesFileSet[] fileset;

		/// <remarks/>
		[XmlElement("filterchain")] public NAntCoreFiltersFilterChain[] filterchain;

		/// <remarks/>
		[XmlAttribute()] public string file;

		/// <remarks/>
		[XmlAttribute()] public string tofile;

		/// <remarks/>
		[XmlAttribute()] public string todir;

		/// <remarks/>
		[XmlAttribute()] public string flatten;

		/// <remarks/>
		[XmlAttribute()] public string overwrite;

		/// <remarks/>
		[XmlAttribute()] public string includeemptydirs;

		/// <remarks/>
		[XmlAttribute()] public string inputencoding;

		/// <remarks/>
		[XmlAttribute()] public string outputencoding;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.MkDirTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksMkDirTask
	{
		/// <remarks/>
		[XmlAttribute()] public string dir;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.DelaySignTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksDelaySignTask
	{
		/// <remarks/>
		[XmlElement("targets")] public NAntCoreTypesFileSet[] targets;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string keyfile;

		/// <remarks/>
		[XmlAttribute()] public string keycontainer;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.IfTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksIfTask
	{
		/// <remarks/>
		[XmlElement("comparefiles")] public NAntCoreTypesFileSet[] comparefiles;

		/// <remarks/>
		[XmlElement("uptodatefiles")] public NAntCoreTypesFileSet[] uptodatefiles;

		/// <remarks/>
		[XmlAttribute()] public string uptodatefile;

		/// <remarks/>
		[XmlAttribute()] public string comparefile;

		/// <remarks/>
		[XmlAttribute()] public string propertytrue;

		/// <remarks/>
		[XmlAttribute()] public string propertyexists;

		/// <remarks/>
		[XmlAttribute()] public string targetexists;

		/// <remarks/>
		[XmlAttribute()] public string test;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.AvailableTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksAvailableTask
	{
		/// <remarks/>
		[XmlAttribute()] public string resource;

		/// <remarks/>
		[XmlAttribute()] public string type;

		/// <remarks/>
		[XmlAttribute()] public string property;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.SourceControl.Tasks.ChangeLogTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntSourceControlTasksChangeLogTask
	{
		/// <remarks/>
		[XmlElement("fileset")] public NAntSourceControlTypesCvsFileSet[] fileset;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string xmlfile;

		/// <remarks/>
		[XmlAttribute()] public string start;

		/// <remarks/>
		[XmlAttribute()] public string end;

		/// <remarks/>
		[XmlAttribute()] public string cvsroot;

		/// <remarks/>
		[XmlAttribute()] public string cvsfullpath;

		/// <remarks/>
		[XmlAttribute()] public string module;

		/// <remarks/>
		[XmlAttribute()] public string cvsrsh;

		/// <remarks/>
		[XmlAttribute()] public string quiet;

		/// <remarks/>
		[XmlAttribute()] public string reallyquiet;

		/// <remarks/>
		[XmlAttribute()] public string @readonly;

		/// <remarks/>
		[XmlAttribute()] public string readwrite;

		/// <remarks/>
		[XmlAttribute()] public string compressionlevel;

		/// <remarks/>
		[XmlAttribute()] public string destination;

		/// <remarks/>
		[XmlAttribute()] public string password;

		/// <remarks/>
		[XmlAttribute()] public string passfile;

		/// <remarks/>
		[XmlAttribute()] public string commandline;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.SourceControl.Tasks.CheckoutTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntSourceControlTasksCheckoutTask
	{
		/// <remarks/>
		[XmlElement("fileset")] public NAntSourceControlTypesCvsFileSet[] fileset;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string revision;

		/// <remarks/>
		[XmlAttribute("sticky-tag")] public string stickytag;

		/// <remarks/>
		[XmlAttribute()] public string date;

		/// <remarks/>
		[XmlAttribute()] public string overridedir;

		/// <remarks/>
		[XmlAttribute("override-directory")] public string overridedirectory;

		/// <remarks/>
		[XmlAttribute()] public string cvsfullpath;

		/// <remarks/>
		[XmlAttribute()] public string cvsroot;

		/// <remarks/>
		[XmlAttribute()] public string module;

		/// <remarks/>
		[XmlAttribute()] public string usesharpcvslib;

		/// <remarks/>
		[XmlAttribute()] public string cvsrsh;

		/// <remarks/>
		[XmlAttribute()] public string quiet;

		/// <remarks/>
		[XmlAttribute()] public string reallyquiet;

		/// <remarks/>
		[XmlAttribute()] public string @readonly;

		/// <remarks/>
		[XmlAttribute()] public string readwrite;

		/// <remarks/>
		[XmlAttribute()] public string compressionlevel;

		/// <remarks/>
		[XmlAttribute()] public string destination;

		/// <remarks/>
		[XmlAttribute()] public string password;

		/// <remarks/>
		[XmlAttribute()] public string passfile;

		/// <remarks/>
		[XmlAttribute()] public string commandline;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.DescriptionTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksDescriptionTask
	{
		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.NDocTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksNDocTask
	{
		/// <remarks/>
		[XmlElement("assemblies")] public NAntDotNetTypesAssemblyFileSet[] assemblies;

		/// <remarks/>
		[XmlElement("summaries")] public NAntCoreTypesFileSet[] summaries;

		/// <remarks/>
		[XmlElement("documenters")] public NAntCoreTypesRawXml[] documenters;

		/// <remarks/>
		[XmlElement("referencepaths")] public NAntCoreTypesDirSet[] referencepaths;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.RawXml", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesRawXml
	{
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.DirSet", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesDirSet
	{
		/// <remarks/>
		[XmlElement("includes")] public NAntCoreTypesFileSetInclude[] includes;

		/// <remarks/>
		[XmlElement("include")] public NAntCoreTypesFileSetInclude[] include;

		/// <remarks/>
		[XmlElement("excludes")] public NAntCoreTypesFileSetExclude[] excludes;

		/// <remarks/>
		[XmlElement("exclude")] public NAntCoreTypesFileSetExclude[] exclude;

		/// <remarks/>
		[XmlElement("includesList")] public NAntCoreTypesFileSetIncludesFile[] includesList;

		/// <remarks/>
		[XmlElement("includesfile")] public NAntCoreTypesFileSetIncludesFile[] includesfile;

		/// <remarks/>
		[XmlElement("excludesfile")] public NAntCoreTypesFileSetExcludesFile[] excludesfile;

		/// <remarks/>
		[XmlAttribute()] public string failonempty;

		/// <remarks/>
		[XmlAttribute()] public string defaultexcludes;

		/// <remarks/>
		[XmlAttribute()] public string basedir;

		/// <remarks/>
		[XmlAttribute()] public string id;

		/// <remarks/>
		[XmlAttribute()] public string refid;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.GetTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksGetTask
	{
		/// <remarks/>
		[XmlElement("proxy")] public NAntCoreTypesProxy[] proxy;

		/// <remarks/>
		[XmlElement("credentials")] public NAntCoreTypesCredential[] credentials;

		/// <remarks/>
		[XmlElement("certificates")] public NAntCoreTypesFileSet[] certificates;

		/// <remarks/>
		[XmlAttribute()] public string src;

		/// <remarks/>
		[XmlAttribute()] public string dest;

		/// <remarks/>
		[XmlAttribute()] public string httpproxy;

		/// <remarks/>
		[XmlAttribute()] public string ignoreerrors;

		/// <remarks/>
		[XmlAttribute()] public string usetimestamp;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.Proxy", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesProxy
	{
		/// <remarks/>
		[XmlElement("credentials")] public NAntCoreTypesCredential[] credentials;

		/// <remarks/>
		[XmlAttribute()] public string host;

		/// <remarks/>
		[XmlAttribute()] public string port;

		/// <remarks/>
		[XmlAttribute()] public string bypassonlocal;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;

		/// <remarks/>
		[XmlAttribute()] public string id;

		/// <remarks/>
		[XmlAttribute()] public string refid;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.Credential", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesCredential
	{
		/// <remarks/>
		[XmlAttribute()] public string domain;

		/// <remarks/>
		[XmlAttribute()] public string password;

		/// <remarks/>
		[XmlAttribute()] public string username;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;

		/// <remarks/>
		[XmlAttribute()] public string id;

		/// <remarks/>
		[XmlAttribute()] public string refid;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VisualCpp.Tasks.McTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTasksMcTask
	{
		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string options;

		/// <remarks/>
		[XmlAttribute()] public string headerpath;

		/// <remarks/>
		[XmlAttribute()] public string rcpath;

		/// <remarks/>
		[XmlAttribute()] public string mcfile;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.LoadTasksTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksLoadTasksTask
	{
		/// <remarks/>
		[XmlElement("fileset")] public NAntCoreTypesFileSet[] fileset;

		/// <remarks/>
		[XmlAttribute()] public string assembly;

		/// <remarks/>
		[XmlAttribute()] public string path;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.IfNotTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksIfNotTask
	{
		/// <remarks/>
		[XmlElement("comparefiles")] public NAntCoreTypesFileSet[] comparefiles;

		/// <remarks/>
		[XmlElement("uptodatefiles")] public NAntCoreTypesFileSet[] uptodatefiles;

		/// <remarks/>
		[XmlAttribute()] public string uptodatefile;

		/// <remarks/>
		[XmlAttribute()] public string comparefile;

		/// <remarks/>
		[XmlAttribute()] public string propertytrue;

		/// <remarks/>
		[XmlAttribute()] public string propertyexists;

		/// <remarks/>
		[XmlAttribute()] public string targetexists;

		/// <remarks/>
		[XmlAttribute()] public string test;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.StyleTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksStyleTask
	{
		/// <remarks/>
		[XmlElement("infiles")] public NAntCoreTypesFileSet[] infiles;

		/// <remarks/>
		[XmlElement("parameters")] public NAntCoreTasksStyleTaskParameters[] parameters;

		/// <remarks/>
		[XmlElement("extensionobjects")] public NAntCoreTasksStyleTaskExtensionobjects[] extensionobjects;

		/// <remarks/>
		[XmlAttribute()] public string destdir;

		/// <remarks/>
		[XmlAttribute()] public string extension;

		/// <remarks/>
		[XmlAttribute()] public string style;

		/// <remarks/>
		[XmlAttribute()] public string @in;

		/// <remarks/>
		[XmlAttribute()] public string @out;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.StyleTaskParameters", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksStyleTaskParameters
	{
		/// <remarks/>
		[XmlElement("parameter")] public NAntCoreTypesXsltParameter[] parameter;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.XsltParameter", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesXsltParameter
	{
		/// <remarks/>
		[XmlAttribute()] public string name;

		/// <remarks/>
		[XmlAttribute()] public string namespaceuri;

		/// <remarks/>
		[XmlAttribute()] public string value;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[
		XmlType(TypeName="NAnt.Core.Tasks.StyleTaskExtensionobjects", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd"
			)]
	public class NAntCoreTasksStyleTaskExtensionobjects
	{
		/// <remarks/>
		[XmlElement("extensionobject")] public NAntCoreTypesXsltExtensionObject[] extensionobject;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.XsltExtensionObject", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesXsltExtensionObject
	{
		/// <remarks/>
		[XmlAttribute()] public string namespaceuri;

		/// <remarks/>
		[XmlAttribute()] public string typename;

		/// <remarks/>
		[XmlAttribute()] public string assembly;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Win32.Tasks.TlbExpTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntWin32TasksTlbExpTask
	{
		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string assembly;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string names;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Win32.Tasks.AxImpTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntWin32TasksAxImpTask
	{
		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string ocx;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string publickey;

		/// <remarks/>
		[XmlAttribute()] public string keyfile;

		/// <remarks/>
		[XmlAttribute()] public string keycontainer;

		/// <remarks/>
		[XmlAttribute()] public string delaysign;

		/// <remarks/>
		[XmlAttribute()] public string generatesource;

		/// <remarks/>
		[XmlAttribute()] public string rcw;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.NUnit1.Tasks.NUnitTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntNUnit1TasksNUnitTask
	{
		/// <remarks/>
		[XmlElement("test")] public NAntNUnit1TypesNUnitTest[] test;

		/// <remarks/>
		[XmlElement("formatter")] public NAntNUnitTypesFormatterElement[] formatter;

		/// <remarks/>
		[XmlAttribute()] public string haltonerror;

		/// <remarks/>
		[XmlAttribute()] public string haltonfailure;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.NUnit1.Types.NUnitTest", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntNUnit1TypesNUnitTest
	{
		/// <remarks/>
		[XmlAttribute()] public string outfile;

		/// <remarks/>
		[XmlAttribute()] public string todir;

		/// <remarks/>
		[XmlAttribute()] public string @class;

		/// <remarks/>
		[XmlAttribute()] public string assembly;

		/// <remarks/>
		[XmlAttribute()] public string fork;

		/// <remarks/>
		[XmlAttribute()] public string haltonerror;

		/// <remarks/>
		[XmlAttribute()] public string haltonfailure;

		/// <remarks/>
		[XmlAttribute()] public string appconfig;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.NUnit.Types.FormatterElement", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntNUnitTypesFormatterElement
	{
		/// <remarks/>
		[XmlAttribute()] public string type;

		/// <remarks/>
		[XmlAttribute()] public string extension;

		/// <remarks/>
		[XmlAttribute()] public string usefile;

		/// <remarks/>
		[XmlAttribute()] public string outputdir;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Compression.Tasks.ZipTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCompressionTasksZipTask
	{
		/// <remarks/>
		[XmlElement("fileset")] public NAntCompressionTypesZipFileSet[] fileset;

		/// <remarks/>
		[XmlAttribute()] public string zipfile;

		/// <remarks/>
		[XmlAttribute()] public string comment;

		/// <remarks/>
		[XmlAttribute()] public string stampdatetime;

		/// <remarks/>
		[XmlAttribute()] public string ziplevel;

		/// <remarks/>
		[XmlAttribute()] public string includeemptydirs;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Compression.Types.ZipFileSet", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCompressionTypesZipFileSet
	{
		/// <remarks/>
		[XmlElement("includes")] public NAntCoreTypesFileSetInclude[] includes;

		/// <remarks/>
		[XmlElement("include")] public NAntCoreTypesFileSetInclude[] include;

		/// <remarks/>
		[XmlElement("excludes")] public NAntCoreTypesFileSetExclude[] excludes;

		/// <remarks/>
		[XmlElement("exclude")] public NAntCoreTypesFileSetExclude[] exclude;

		/// <remarks/>
		[XmlElement("includesList")] public NAntCoreTypesFileSetIncludesFile[] includesList;

		/// <remarks/>
		[XmlElement("includesfile")] public NAntCoreTypesFileSetIncludesFile[] includesfile;

		/// <remarks/>
		[XmlElement("excludesfile")] public NAntCoreTypesFileSetExcludesFile[] excludesfile;

		/// <remarks/>
		[XmlAttribute()] public string prefix;

		/// <remarks/>
		[XmlAttribute()] public string failonempty;

		/// <remarks/>
		[XmlAttribute()] public string defaultexcludes;

		/// <remarks/>
		[XmlAttribute()] public string basedir;

		/// <remarks/>
		[XmlAttribute()] public string id;

		/// <remarks/>
		[XmlAttribute()] public string refid;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.SourceControl.Tasks.UpdateTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntSourceControlTasksUpdateTask
	{
		/// <remarks/>
		[XmlElement("fileset")] public NAntSourceControlTypesCvsFileSet[] fileset;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string builddirs;

		/// <remarks/>
		[XmlAttribute()] public string pruneempty;

		/// <remarks/>
		[XmlAttribute()] public string overwritelocal;

		/// <remarks/>
		[XmlAttribute()] public string recursive;

		/// <remarks/>
		[XmlAttribute()] public string revision;

		/// <remarks/>
		[XmlAttribute("sticky-tag")] public string stickytag;

		/// <remarks/>
		[XmlAttribute()] public string date;

		/// <remarks/>
		[XmlAttribute()] public string cvsfullpath;

		/// <remarks/>
		[XmlAttribute()] public string cvsroot;

		/// <remarks/>
		[XmlAttribute()] public string module;

		/// <remarks/>
		[XmlAttribute()] public string usesharpcvslib;

		/// <remarks/>
		[XmlAttribute()] public string cvsrsh;

		/// <remarks/>
		[XmlAttribute()] public string quiet;

		/// <remarks/>
		[XmlAttribute()] public string reallyquiet;

		/// <remarks/>
		[XmlAttribute()] public string @readonly;

		/// <remarks/>
		[XmlAttribute()] public string readwrite;

		/// <remarks/>
		[XmlAttribute()] public string compressionlevel;

		/// <remarks/>
		[XmlAttribute()] public string destination;

		/// <remarks/>
		[XmlAttribute()] public string password;

		/// <remarks/>
		[XmlAttribute()] public string passfile;

		/// <remarks/>
		[XmlAttribute()] public string commandline;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.JscTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksJscTask
	{
		/// <remarks/>
		[XmlElement("lib")] public NAntCoreTypesFileSet[] lib;

		/// <remarks/>
		[XmlElement("references")] public NAntDotNetTypesAssemblyFileSet[] references;

		/// <remarks/>
		[XmlElement("pkg-references")] public NAntDotNetTasksJscTaskPkgreferences[] pkgreferences;

		/// <remarks/>
		[XmlElement("resources")] public NAntDotNetTypesResourceFileSet[] resources;

		/// <remarks/>
		[XmlElement("sources")] public NAntCoreTypesFileSet[] sources;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string warninglevel;

		/// <remarks/>
		[XmlAttribute()] public string codepage;

		/// <remarks/>
		[XmlAttribute()] public string debug;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string target;

		/// <remarks/>
		[XmlAttribute()] public string define;

		/// <remarks/>
		[XmlAttribute()] public string win32icon;

		/// <remarks/>
		[XmlAttribute()] public string warnaserror;

		/// <remarks/>
		[XmlAttribute()] public string rebuild;

		/// <remarks/>
		[XmlAttribute()] public string main;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.JscTaskPkgreferences", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksJscTaskPkgreferences
	{
		/// <remarks/>
		[XmlElement("package")] public NAntDotNetTypesPackage[] package;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Compression.Tasks.GUnzip", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCompressionTasksGUnzip
	{
		/// <remarks/>
		[XmlAttribute()] public string src;

		/// <remarks/>
		[XmlAttribute()] public string dest;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.RegexTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksRegexTask
	{
		/// <remarks/>
		[XmlAttribute()] public string pattern;

		/// <remarks/>
		[XmlAttribute()] public string options;

		/// <remarks/>
		[XmlAttribute()] public string input;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.TStampTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksTStampTask
	{
		/// <remarks/>
		[XmlElement("formatter")] public NAntCoreTypesFormatter[] formatter;

		/// <remarks/>
		[XmlAttribute()] public string property;

		/// <remarks/>
		[XmlAttribute()] public string pattern;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.Formatter", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesFormatter
	{
		/// <remarks/>
		[XmlAttribute()] public string property;

		/// <remarks/>
		[XmlAttribute()] public string pattern;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.SourceControl.Tasks.TagTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntSourceControlTasksTagTask
	{
		/// <remarks/>
		[XmlElement("fileset")] public NAntSourceControlTypesCvsFileSet[] fileset;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string tag;

		/// <remarks/>
		[XmlAttribute()] public string remove;

		/// <remarks/>
		[XmlAttribute("move-if-exists")] public string moveifexists;

		/// <remarks/>
		[XmlAttribute()] public string recursive;

		/// <remarks/>
		[XmlAttribute("act-on-tag")] public string actontag;

		/// <remarks/>
		[XmlAttribute("act-on-date")] public string actondate;

		/// <remarks/>
		[XmlAttribute("force-head")] public string forcehead;

		/// <remarks/>
		[XmlAttribute("fail-if-modified")] public string failifmodified;

		/// <remarks/>
		[XmlAttribute()] public string cvsfullpath;

		/// <remarks/>
		[XmlAttribute()] public string cvsroot;

		/// <remarks/>
		[XmlAttribute()] public string usesharpcvslib;

		/// <remarks/>
		[XmlAttribute()] public string cvsrsh;

		/// <remarks/>
		[XmlAttribute()] public string quiet;

		/// <remarks/>
		[XmlAttribute()] public string reallyquiet;

		/// <remarks/>
		[XmlAttribute()] public string @readonly;

		/// <remarks/>
		[XmlAttribute()] public string readwrite;

		/// <remarks/>
		[XmlAttribute()] public string compressionlevel;

		/// <remarks/>
		[XmlAttribute()] public string destination;

		/// <remarks/>
		[XmlAttribute()] public string password;

		/// <remarks/>
		[XmlAttribute()] public string passfile;

		/// <remarks/>
		[XmlAttribute()] public string commandline;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.LoadFileTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksLoadFileTask
	{
		/// <remarks/>
		[XmlElement("filterchain")] public NAntCoreFiltersFilterChain[] filterchain;

		/// <remarks/>
		[XmlAttribute()] public string file;

		/// <remarks/>
		[XmlAttribute()] public string property;

		/// <remarks/>
		[XmlAttribute()] public string encoding;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.TouchTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksTouchTask
	{
		/// <remarks/>
		[XmlElement("fileset")] public NAntCoreTypesFileSet[] fileset;

		/// <remarks/>
		[XmlAttribute()] public string file;

		/// <remarks/>
		[XmlAttribute()] public string millis;

		/// <remarks/>
		[XmlAttribute()] public string datetime;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VisualCpp.Tasks.ClTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTasksClTask
	{
		/// <remarks/>
		[XmlElement("sources")] public NAntCoreTypesFileSet[] sources;

		/// <remarks/>
		[XmlElement("includedirs")] public NAntCoreTypesFileSet[] includedirs;

		/// <remarks/>
		[XmlElement("metadataincludedirs")] public NAntCoreTypesFileSet[] metadataincludedirs;

		/// <remarks/>
		[XmlElement("forcedusingfiles")] public NAntCoreTypesFileSet[] forcedusingfiles;

		/// <remarks/>
		[XmlElement("defines")] public NAntVisualCppTasksClTaskDefines[] defines;

		/// <remarks/>
		[XmlElement("undefines")] public NAntVisualCppTasksClTaskUndefines[] undefines;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string outputdir;

		/// <remarks/>
		[XmlAttribute()] public string pchfile;

		/// <remarks/>
		[XmlAttribute()] public string pchthroughfile;

		/// <remarks/>
		[XmlAttribute()] public string pchmode;

		/// <remarks/>
		[XmlAttribute()] public string managedextensions;

		/// <remarks/>
		[XmlAttribute()] public string characterset;

		/// <remarks/>
		[XmlAttribute()] public string options;

		/// <remarks/>
		[XmlAttribute()] public string objectfile;

		/// <remarks/>
		[XmlAttribute()] public string pdbfile;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VisualCpp.Tasks.ClTaskDefines", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTasksClTaskDefines
	{
		/// <remarks/>
		[XmlElement("define")] public NAntCoreTypesOption[] define;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VisualCpp.Tasks.ClTaskUndefines", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTasksClTaskUndefines
	{
		/// <remarks/>
		[XmlElement("undefine")] public NAntCoreTypesOption[] undefine;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VisualCpp.Tasks.MidlTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTasksMidlTask
	{
		/// <remarks/>
		[XmlElement("options")] public NAntVisualCppTasksMidlTaskOptions[] options;

		/// <remarks/>
		[XmlElement("defines")] public NAntVisualCppTasksMidlTaskDefines[] defines;

		/// <remarks/>
		[XmlElement("undefines")] public NAntVisualCppTasksMidlTaskUndefines[] undefines;

		/// <remarks/>
		[XmlElement("includedirs")] public NAntCoreTypesFileSet[] includedirs;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string acf;

		/// <remarks/>
		[XmlAttribute()] public string align;

		/// <remarks/>
		[XmlAttribute()] public string app_config;

		/// <remarks/>
		[XmlAttribute()] public string @char;

		/// <remarks/>
		[XmlAttribute()] public string client;

		/// <remarks/>
		[XmlAttribute()] public string cstub;

		/// <remarks/>
		[XmlAttribute()] public string dlldata;

		/// <remarks/>
		[XmlAttribute()] public string env;

		/// <remarks/>
		[XmlAttribute()] public string Oi;

		/// <remarks/>
		[XmlAttribute()] public string tlb;

		/// <remarks/>
		[XmlAttribute()] public string header;

		/// <remarks/>
		[XmlAttribute()] public string iid;

		/// <remarks/>
		[XmlAttribute()] public string proxy;

		/// <remarks/>
		[XmlAttribute()] public string filename;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VisualCpp.Tasks.MidlTaskOptions", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTasksMidlTaskOptions
	{
		/// <remarks/>
		[XmlElement("option")] public NAntCoreTypesOption[] option;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VisualCpp.Tasks.MidlTaskDefines", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTasksMidlTaskDefines
	{
		/// <remarks/>
		[XmlElement("define")] public NAntCoreTypesOption[] define;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VisualCpp.Tasks.MidlTaskUndefines", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTasksMidlTaskUndefines
	{
		/// <remarks/>
		[XmlElement("undefine")] public NAntCoreTypesOption[] undefine;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.SourceControl.Tasks.CvsPass", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntSourceControlTasksCvsPass
	{
		/// <remarks/>
		[XmlAttribute()] public string password;

		/// <remarks/>
		[XmlAttribute()] public string passfile;

		/// <remarks/>
		[XmlAttribute()] public string cvsroot;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.NUnit2.Tasks.NUnit2Task", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntNUnit2TasksNUnit2Task
	{
		/// <remarks/>
		[XmlElement("test")] public NAntNUnit2TypesNUnit2Test[] test;

		/// <remarks/>
		[XmlElement("formatter")] public NAntNUnitTypesFormatterElement[] formatter;

		/// <remarks/>
		[XmlAttribute()] public string haltonfailure;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.NUnit2.Types.NUnit2Test", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntNUnit2TypesNUnit2Test
	{
		/// <remarks/>
		[XmlElement("assemblies")] public NAntDotNetTypesAssemblyFileSet[] assemblies;

		/// <remarks/>
		[XmlElement("categories")] public NAntNUnit2TypesCategorySet[] categories;

		/// <remarks/>
		[XmlAttribute()] public string assemblyname;

		/// <remarks/>
		[XmlAttribute()] public string testname;

		/// <remarks/>
		[XmlAttribute()] public string haltonfailure;

		/// <remarks/>
		[XmlAttribute()] public string transformfile;

		/// <remarks/>
		[XmlAttribute()] public string appconfig;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.NUnit2.Types.CategorySet", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntNUnit2TypesCategorySet
	{
		/// <remarks/>
		[XmlElement("include")] public NAntNUnit2TypesCategory[] include;

		/// <remarks/>
		[XmlElement("exclude")] public NAntNUnit2TypesCategory[] exclude;

		/// <remarks/>
		[XmlAttribute()] public string id;

		/// <remarks/>
		[XmlAttribute()] public string refid;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.NUnit2.Types.Category", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntNUnit2TypesCategory
	{
		/// <remarks/>
		[XmlAttribute()] public string name;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.DeleteTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksDeleteTask
	{
		/// <remarks/>
		[XmlElement("fileset")] public NAntCoreTypesFileSet[] fileset;

		/// <remarks/>
		[XmlAttribute()] public string file;

		/// <remarks/>
		[XmlAttribute()] public string dir;

		/// <remarks/>
		[XmlAttribute()] public string includeemptydirs;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Compression.Tasks.TarTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCompressionTasksTarTask
	{
		/// <remarks/>
		[XmlElement("fileset")] public NAntCompressionTypesTarFileSet[] fileset;

		/// <remarks/>
		[XmlAttribute()] public string destfile;

		/// <remarks/>
		[XmlAttribute()] public string includeemptydirs;

		/// <remarks/>
		[XmlAttribute()] public string compression;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Compression.Types.TarFileSet", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCompressionTypesTarFileSet
	{
		/// <remarks/>
		[XmlElement("includes")] public NAntCoreTypesFileSetInclude[] includes;

		/// <remarks/>
		[XmlElement("include")] public NAntCoreTypesFileSetInclude[] include;

		/// <remarks/>
		[XmlElement("excludes")] public NAntCoreTypesFileSetExclude[] excludes;

		/// <remarks/>
		[XmlElement("exclude")] public NAntCoreTypesFileSetExclude[] exclude;

		/// <remarks/>
		[XmlElement("includesList")] public NAntCoreTypesFileSetIncludesFile[] includesList;

		/// <remarks/>
		[XmlElement("includesfile")] public NAntCoreTypesFileSetIncludesFile[] includesfile;

		/// <remarks/>
		[XmlElement("excludesfile")] public NAntCoreTypesFileSetExcludesFile[] excludesfile;

		/// <remarks/>
		[XmlAttribute()] public string filemode;

		/// <remarks/>
		[XmlAttribute()] public string dirmode;

		/// <remarks/>
		[XmlAttribute()] public string username;

		/// <remarks/>
		[XmlAttribute()] public string uid;

		/// <remarks/>
		[XmlAttribute()] public string groupname;

		/// <remarks/>
		[XmlAttribute()] public string gid;

		/// <remarks/>
		[XmlAttribute()] public string prefix;

		/// <remarks/>
		[XmlAttribute()] public string failonempty;

		/// <remarks/>
		[XmlAttribute()] public string defaultexcludes;

		/// <remarks/>
		[XmlAttribute()] public string basedir;

		/// <remarks/>
		[XmlAttribute()] public string id;

		/// <remarks/>
		[XmlAttribute()] public string refid;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.CscTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksCscTask
	{
		/// <remarks/>
		[XmlElement("warnaserror")] public NAntDotNetTypesWarningAsError[] warnaserror;

		/// <remarks/>
		[XmlElement("nowarn")] public NAntDotNetTasksCscTaskNowarn[] nowarn;

		/// <remarks/>
		[XmlElement("lib")] public NAntCoreTypesFileSet[] lib;

		/// <remarks/>
		[XmlElement("references")] public NAntDotNetTypesAssemblyFileSet[] references;

		/// <remarks/>
		[XmlElement("pkg-references")] public NAntDotNetTasksCscTaskPkgreferences[] pkgreferences;

		/// <remarks/>
		[XmlElement("resources")] public NAntDotNetTypesResourceFileSet[] resources;

		/// <remarks/>
		[XmlElement("modules")] public NAntDotNetTypesAssemblyFileSet[] modules;

		/// <remarks/>
		[XmlElement("sources")] public NAntCoreTypesFileSet[] sources;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string baseaddress;

		/// <remarks/>
		[XmlAttribute()] public string debug;

		/// <remarks/>
		[XmlAttribute()] public string doc;

		/// <remarks/>
		[XmlAttribute()] public string filealign;

		/// <remarks/>
		[XmlAttribute()] public string nostdlib;

		/// <remarks/>
		[XmlAttribute()] public string noconfig;

		/// <remarks/>
		[XmlAttribute()] public string @checked;

		/// <remarks/>
		[XmlAttribute()] public string @unsafe;

		/// <remarks/>
		[XmlAttribute()] public string optimize;

		/// <remarks/>
		[XmlAttribute()] public string warninglevel;

		/// <remarks/>
		[XmlAttribute()] public string codepage;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string target;

		/// <remarks/>
		[XmlAttribute()] public string define;

		/// <remarks/>
		[XmlAttribute()] public string win32icon;

		/// <remarks/>
		[XmlAttribute("warnaserror")] public string warnaserror1;

		/// <remarks/>
		[XmlAttribute("nowarn")] public string nowarn1;

		/// <remarks/>
		[XmlAttribute()] public string rebuild;

		/// <remarks/>
		[XmlAttribute()] public string main;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.CscTaskNowarn", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksCscTaskNowarn
	{
		/// <remarks/>
		[XmlElement("warning")] public NAntDotNetTypesCompilerWarning[] warning;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.CscTaskPkgreferences", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksCscTaskPkgreferences
	{
		/// <remarks/>
		[XmlElement("package")] public NAntDotNetTypesPackage[] package;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.MSNet.Tasks.IldasmTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntMSNetTasksIldasmTask
	{
		/// <remarks/>
		[XmlElement("assemblies")] public NAntCoreTypesFileSet[] assemblies;

		/// <remarks/>
		[XmlAttribute()] public string all;

		/// <remarks/>
		[XmlAttribute()] public string bytes;

		/// <remarks/>
		[XmlAttribute()] public string rebuild;

		/// <remarks/>
		[XmlAttribute()] public string header;

		/// <remarks/>
		[XmlAttribute()] public string input;

		/// <remarks/>
		[XmlAttribute()] public string linenumbers;

		/// <remarks/>
		[XmlAttribute()] public string noil;

		/// <remarks/>
		[XmlAttribute()] public string publiconly;

		/// <remarks/>
		[XmlAttribute()] public string quoteallnames;

		/// <remarks/>
		[XmlAttribute()] public string rawexceptionhandling;

		/// <remarks/>
		[XmlAttribute()] public string source;

		/// <remarks/>
		[XmlAttribute()] public string tokens;

		/// <remarks/>
		[XmlAttribute()] public string unicode;

		/// <remarks/>
		[XmlAttribute()] public string utf8;

		/// <remarks/>
		[XmlAttribute()] public string item;

		/// <remarks/>
		[XmlAttribute()] public string visibility;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string todir;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.SleepTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksSleepTask
	{
		/// <remarks/>
		[XmlAttribute()] public string hours;

		/// <remarks/>
		[XmlAttribute()] public string minutes;

		/// <remarks/>
		[XmlAttribute()] public string seconds;

		/// <remarks/>
		[XmlAttribute()] public string milliseconds;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.IlasmTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksIlasmTask
	{
		/// <remarks/>
		[XmlElement("sources")] public NAntCoreTypesFileSet[] sources;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string clock;

		/// <remarks/>
		[XmlAttribute()] public string debug;

		/// <remarks/>
		[XmlAttribute()] public string error;

		/// <remarks/>
		[XmlAttribute()] public string rebuild;

		/// <remarks/>
		[XmlAttribute()] public string listing;

		/// <remarks/>
		[XmlAttribute()] public string alignment;

		/// <remarks/>
		[XmlAttribute()] public string @base;

		/// <remarks/>
		[XmlAttribute()] public string flags;

		/// <remarks/>
		[XmlAttribute()] public string subsystem;

		/// <remarks/>
		[XmlAttribute()] public string target;

		/// <remarks/>
		[XmlAttribute()] public string keysource;

		/// <remarks/>
		[XmlAttribute()] public string keyfile;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string resourcefile;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VisualCpp.Tasks.LinkTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTasksLinkTask
	{
		/// <remarks/>
		[XmlElement("sources")] public NAntCoreTypesFileSet[] sources;

		/// <remarks/>
		[XmlElement("libdirs")] public NAntCoreTypesFileSet[] libdirs;

		/// <remarks/>
		[XmlElement("modules")] public NAntCoreTypesFileSet[] modules;

		/// <remarks/>
		[XmlElement("embeddedresources")] public NAntCoreTypesFileSet[] embeddedresources;

		/// <remarks/>
		[XmlElement("symbols")] public NAntVisualCppTasksLinkTaskSymbols[] symbols;

		/// <remarks/>
		[XmlElement("ignorelibraries")] public NAntVisualCppTasksLinkTaskIgnorelibraries[] ignorelibraries;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string options;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string pdbfile;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VisualCpp.Tasks.LinkTaskSymbols", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTasksLinkTaskSymbols
	{
		/// <remarks/>
		[XmlElement("symbol")] public NAntVisualCppTypesSymbol[] symbol;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VisualCpp.Types.Symbol", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTypesSymbol
	{
		/// <remarks/>
		[XmlAttribute()] public string name;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[
		XmlType(TypeName="NAnt.VisualCpp.Tasks.LinkTaskIgnorelibraries",
			Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTasksLinkTaskIgnorelibraries
	{
		/// <remarks/>
		[XmlElement("library")] public NAntVisualCppTypesLibrary[] library;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VisualCpp.Types.Library", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTypesLibrary
	{
		/// <remarks/>
		[XmlAttribute()] public string name;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.AssemblyInfoTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksAssemblyInfoTask
	{
		/// <remarks/>
		[XmlElement("attributes")] public NAntDotNetTasksAssemblyInfoTaskAttributes[] attributes;

		/// <remarks/>
		[XmlElement("imports")] public NAntDotNetTypesNamespaceImportCollection[] imports;

		/// <remarks/>
		[XmlElement("references")] public NAntDotNetTypesAssemblyFileSet[] references;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string language;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[
		XmlType(TypeName="NAnt.DotNet.Tasks.AssemblyInfoTaskAttributes",
			Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksAssemblyInfoTaskAttributes
	{
		/// <remarks/>
		[XmlElement("attribute")] public NAntDotNetTypesAssemblyAttribute[] attribute;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Types.AssemblyAttribute", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTypesAssemblyAttribute
	{
		/// <remarks/>
		[XmlAttribute()] public string type;

		/// <remarks/>
		[XmlAttribute()] public string value;

		/// <remarks/>
		[XmlAttribute()] public string asis;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.ExecTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksExecTask
	{
		/// <remarks/>
		[XmlElement("environment")] public NAntCoreTypesEnvironmentSet[] environment;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string program;

		/// <remarks/>
		[XmlAttribute()] public string commandline;

		/// <remarks/>
		[XmlAttribute()] public string workingdir;

		/// <remarks/>
		[XmlAttribute()] public string resultproperty;

		/// <remarks/>
		[XmlAttribute()] public string useruntimeengine;

		/// <remarks/>
		[XmlAttribute()] public string basedir;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string append;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Types.EnvironmentSet", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTypesEnvironmentSet
	{
		/// <remarks/>
		[XmlElement("option")] public NAntCoreTypesOption[] option;

		/// <remarks/>
		[XmlElement("variable")] public NAntCoreTypesEnvironmentVariable[] variable;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VSNet.Tasks.SolutionTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVSNetTasksSolutionTask
	{
		/// <remarks/>
		[XmlElement("projects")] public NAntCoreTypesFileSet[] projects;

		/// <remarks/>
		[XmlElement("referenceprojects")] public NAntCoreTypesFileSet[] referenceprojects;

		/// <remarks/>
		[XmlElement("webmap")] public NAntVSNetTasksSolutionTaskWebmap[] webmap;

		/// <remarks/>
		[XmlElement("excludeprojects")] public NAntCoreTypesFileSet[] excludeprojects;

		/// <remarks/>
		[XmlElement("assemblyfolders")] public NAntCoreTypesFileSet[] assemblyfolders;

		/// <remarks/>
		[XmlAttribute()] public string solutionfile;

		/// <remarks/>
		[XmlAttribute()] public string configuration;

		/// <remarks/>
		[XmlAttribute()] public string outputdir;

		/// <remarks/>
		[XmlAttribute()] public string includevsfolders;

		/// <remarks/>
		[XmlAttribute()] public string enablewebdav;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VSNet.Tasks.SolutionTaskWebmap", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVSNetTasksSolutionTaskWebmap
	{
		/// <remarks/>
		[XmlElement("map")] public NAntVSNetTypesWebMap[] map;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VSNet.Types.WebMap", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVSNetTypesWebMap
	{
		/// <remarks/>
		[XmlAttribute()] public string url;

		/// <remarks/>
		[XmlAttribute()] public string path;

		/// <remarks/>
		[XmlAttribute()] public string casesensitive;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.SourceControl.Tasks.ExportTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntSourceControlTasksExportTask
	{
		/// <remarks/>
		[XmlElement("fileset")] public NAntSourceControlTypesCvsFileSet[] fileset;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute("no-shortening")] public string noshortening;

		/// <remarks/>
		[XmlAttribute("force-head")] public string forcehead;

		/// <remarks/>
		[XmlAttribute()] public string recursive;

		/// <remarks/>
		[XmlAttribute()] public string revision;

		/// <remarks/>
		[XmlAttribute()] public string date;

		/// <remarks/>
		[XmlAttribute()] public string overridedir;

		/// <remarks/>
		[XmlAttribute()] public string cvsfullpath;

		/// <remarks/>
		[XmlAttribute()] public string cvsroot;

		/// <remarks/>
		[XmlAttribute()] public string module;

		/// <remarks/>
		[XmlAttribute()] public string usesharpcvslib;

		/// <remarks/>
		[XmlAttribute()] public string cvsrsh;

		/// <remarks/>
		[XmlAttribute()] public string quiet;

		/// <remarks/>
		[XmlAttribute()] public string reallyquiet;

		/// <remarks/>
		[XmlAttribute()] public string @readonly;

		/// <remarks/>
		[XmlAttribute()] public string readwrite;

		/// <remarks/>
		[XmlAttribute()] public string compressionlevel;

		/// <remarks/>
		[XmlAttribute()] public string destination;

		/// <remarks/>
		[XmlAttribute()] public string password;

		/// <remarks/>
		[XmlAttribute()] public string passfile;

		/// <remarks/>
		[XmlAttribute()] public string commandline;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.XmlPokeTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksXmlPokeTask
	{
		/// <remarks/>
		[XmlElement("namespaces")] public NAntCoreTasksXmlPokeTaskNamespaces[] namespaces;

		/// <remarks/>
		[XmlAttribute()] public string file;

		/// <remarks/>
		[XmlAttribute()] public string xpath;

		/// <remarks/>
		[XmlAttribute()] public string value;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.XmlPokeTaskNamespaces", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksXmlPokeTaskNamespaces
	{
		/// <remarks/>
		[XmlElement("namespace")] public NAntCoreTypesXmlNamespace[] @namespace;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.CallTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksCallTask
	{
		/// <remarks/>
		[XmlAttribute()] public string target;

		/// <remarks/>
		[XmlAttribute()] public string force;

		/// <remarks/>
		[XmlAttribute()] public string cascade;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.LicenseTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksLicenseTask
	{
		/// <remarks/>
		[XmlElement("assemblies")] public NAntDotNetTypesAssemblyFileSet[] assemblies;

		/// <remarks/>
		[XmlAttribute()] public string input;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string licensetarget;

		/// <remarks/>
		[XmlAttribute()] public string target;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.CopyTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksCopyTask
	{
		/// <remarks/>
		[XmlElement("fileset")] public NAntCoreTypesFileSet[] fileset;

		/// <remarks/>
		[XmlElement("filterchain")] public NAntCoreFiltersFilterChain[] filterchain;

		/// <remarks/>
		[XmlAttribute()] public string file;

		/// <remarks/>
		[XmlAttribute()] public string tofile;

		/// <remarks/>
		[XmlAttribute()] public string todir;

		/// <remarks/>
		[XmlAttribute()] public string overwrite;

		/// <remarks/>
		[XmlAttribute()] public string flatten;

		/// <remarks/>
		[XmlAttribute()] public string includeemptydirs;

		/// <remarks/>
		[XmlAttribute()] public string inputencoding;

		/// <remarks/>
		[XmlAttribute()] public string outputencoding;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.MailTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksMailTask
	{
		/// <remarks/>
		[XmlElement("files")] public NAntCoreTypesFileSet[] files;

		/// <remarks/>
		[XmlElement("attachments")] public NAntCoreTypesFileSet[] attachments;

		/// <remarks/>
		[XmlAttribute()] public string from;

		/// <remarks/>
		[XmlAttribute()] public string tolist;

		/// <remarks/>
		[XmlAttribute()] public string cclist;

		/// <remarks/>
		[XmlAttribute()] public string bcclist;

		/// <remarks/>
		[XmlAttribute()] public string mailhost;

		/// <remarks/>
		[XmlAttribute()] public string message;

		/// <remarks/>
		[XmlAttribute()] public string subject;

		/// <remarks/>
		[XmlAttribute()] public string format;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.ScriptTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksScriptTask
	{
		/// <remarks/>
		[XmlElement("references")] public NAntDotNetTypesAssemblyFileSet[] references;

		/// <remarks/>
		[XmlElement("imports")] public NAntDotNetTypesNamespaceImportCollection[] imports;

		/// <remarks/>
		[XmlElement("code")] public NAntCoreTypesRawXml[] code;

		/// <remarks/>
		[XmlAttribute()] public string language;

		/// <remarks/>
		[XmlAttribute()] public string mainclass;

		/// <remarks/>
		[XmlAttribute()] public string prefix;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Compression.Tasks.UnZipTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCompressionTasksUnZipTask
	{
		/// <remarks/>
		[XmlAttribute()] public string zipfile;

		/// <remarks/>
		[XmlAttribute()] public string todir;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Win32.Tasks.TlbImpTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntWin32TasksTlbImpTask
	{
		/// <remarks/>
		[XmlElement("references")] public NAntDotNetTypesAssemblyFileSet[] references;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string @namespace;

		/// <remarks/>
		[XmlAttribute()] public string asmversion;

		/// <remarks/>
		[XmlAttribute()] public string delaysign;

		/// <remarks/>
		[XmlAttribute()] public string primary;

		/// <remarks/>
		[XmlAttribute()] public string publickey;

		/// <remarks/>
		[XmlAttribute()] public string keyfile;

		/// <remarks/>
		[XmlAttribute()] public string keycontainer;

		/// <remarks/>
		[XmlAttribute()] public string strictref;

		/// <remarks/>
		[XmlAttribute()] public string sysarray;

		/// <remarks/>
		[XmlAttribute()] public string typelib;

		/// <remarks/>
		[XmlAttribute()] public string @unsafe;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.SysInfoTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksSysInfoTask
	{
		/// <remarks/>
		[XmlAttribute()] public string prefix;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.SourceControl.Tasks.CvsTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntSourceControlTasksCvsTask
	{
		/// <remarks/>
		[XmlElement("fileset")] public NAntSourceControlTypesCvsFileSet[] fileset;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string command;

		/// <remarks/>
		[XmlAttribute()] public string cvsfullpath;

		/// <remarks/>
		[XmlAttribute()] public string cvsroot;

		/// <remarks/>
		[XmlAttribute()] public string module;

		/// <remarks/>
		[XmlAttribute()] public string usesharpcvslib;

		/// <remarks/>
		[XmlAttribute()] public string cvsrsh;

		/// <remarks/>
		[XmlAttribute()] public string quiet;

		/// <remarks/>
		[XmlAttribute()] public string reallyquiet;

		/// <remarks/>
		[XmlAttribute()] public string @readonly;

		/// <remarks/>
		[XmlAttribute()] public string readwrite;

		/// <remarks/>
		[XmlAttribute()] public string compressionlevel;

		/// <remarks/>
		[XmlAttribute()] public string destination;

		/// <remarks/>
		[XmlAttribute()] public string password;

		/// <remarks/>
		[XmlAttribute()] public string passfile;

		/// <remarks/>
		[XmlAttribute()] public string commandline;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Win32.Tasks.ReadRegistryTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntWin32TasksReadRegistryTask
	{
		/// <remarks/>
		[XmlAttribute()] public string property;

		/// <remarks/>
		[XmlAttribute()] public string prefix;

		/// <remarks/>
		[XmlAttribute()] public string key;

		/// <remarks/>
		[XmlAttribute()] public string hive;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.LoopTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksLoopTask
	{
		/// <remarks/>
		[XmlElement("in")] public NAntCoreTasksInElement[] @in;

		/// <remarks/>
		[XmlElement("do")] public NAntCoreTaskContainer[] @do;

		/// <remarks/>
		[XmlAttribute()] public string property;

		/// <remarks/>
		[XmlAttribute()] public string item;

		/// <remarks/>
		[XmlAttribute()] public string trim;

		/// <remarks/>
		[XmlAttribute("in")] public string in1;

		/// <remarks/>
		[XmlAttribute()] public string delim;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.InElement", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksInElement
	{
		/// <remarks/>
		[XmlElement("items")] public NAntCoreTypesFileSet[] items;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.TaskContainer", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTaskContainer
	{
		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.DotNet.Tasks.RegsvcsTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntDotNetTasksRegsvcsTask
	{
		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string action;

		/// <remarks/>
		[XmlAttribute()] public string assembly;

		/// <remarks/>
		[XmlAttribute()] public string tlb;

		/// <remarks/>
		[XmlAttribute()] public string existingtlb;

		/// <remarks/>
		[XmlAttribute()] public string noreconfig;

		/// <remarks/>
		[XmlAttribute()] public string componentsonly;

		/// <remarks/>
		[XmlAttribute()] public string existingapp;

		/// <remarks/>
		[XmlAttribute()] public string application;

		/// <remarks/>
		[XmlAttribute()] public string partition;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VisualCpp.Tasks.LibTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTasksLibTask
	{
		/// <remarks/>
		[XmlElement("sources")] public NAntCoreTypesFileSet[] sources;

		/// <remarks/>
		[XmlElement("symbols")] public NAntVisualCppTasksLibTaskSymbols[] symbols;

		/// <remarks/>
		[XmlElement("ignorelibraries")] public NAntVisualCppTasksLibTaskIgnorelibraries[] ignorelibraries;

		/// <remarks/>
		[XmlElement("libdirs")] public NAntCoreTypesFileSet[] libdirs;

		/// <remarks/>
		[XmlElement("arg")] public NAntCoreTypesArgument[] arg;

		/// <remarks/>
		[XmlAttribute()] public string options;

		/// <remarks/>
		[XmlAttribute()] public string output;

		/// <remarks/>
		[XmlAttribute()] public string moduledefinition;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.VisualCpp.Tasks.LibTaskSymbols", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTasksLibTaskSymbols
	{
		/// <remarks/>
		[XmlElement("symbol")] public NAntVisualCppTypesSymbol[] symbol;
	}

	/// <remarks/>
	[
		XmlType(TypeName="NAnt.VisualCpp.Tasks.LibTaskIgnorelibraries",
			Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntVisualCppTasksLibTaskIgnorelibraries
	{
		/// <remarks/>
		[XmlElement("library")] public NAntVisualCppTypesLibrary[] library;
	}

	/// <remarks/>
	[XmlType(TypeName="Tests.NAnt.Core.TestTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class TestsNAntCoreTestTask
	{
		/// <remarks/>
		[XmlAttribute()] public string fail;

		/// <remarks/>
		[XmlAttribute()] public string required;

		/// <remarks/>
		[XmlAttribute()] public string requirednotempty;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="Tests.NAnt.Core.ElementTest1Task", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class TestsNAntCoreElementTest1Task
	{
		/// <remarks/>
		[XmlElement("fileset")] public NAntCoreTypesFileSet[] fileset;

		/// <remarks/>
		[XmlAttribute()] public string type;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.MSNet.Tasks.ServiceControllerTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntMSNetTasksServiceControllerTask
	{
		/// <remarks/>
		[XmlAttribute()] public string service;

		/// <remarks/>
		[XmlAttribute()] public string machine;

		/// <remarks/>
		[XmlAttribute()] public string action;

		/// <remarks/>
		[XmlAttribute()] public string timeout;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}

	/// <remarks/>
	[XmlType(TypeName="NAnt.Core.Tasks.FailTask", Namespace="http://nant.sf.net/release/0.85-rc3/nant.xsd")]
	public class NAntCoreTasksFailTask
	{
		/// <remarks/>
		[XmlAttribute()] public string message;

		/// <remarks/>
		[XmlAttribute()] public string failonerror;

		/// <remarks/>
		[XmlAttribute()] public string verbose;

		/// <remarks/>
		[XmlAttribute()] public string @if;

		/// <remarks/>
		[XmlAttribute()] public string unless;
	}
}